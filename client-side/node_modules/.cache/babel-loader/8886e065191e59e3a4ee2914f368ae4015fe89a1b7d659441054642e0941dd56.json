{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin/Documents/projects/insta-cloneV2/client/src/components/home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useReducer } from 'react';\nimport './home.css';\nimport Feed from './Feed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  SAVE: 'save',\n  LIKE: 'like'\n};\nconst Home = () => {\n  _s();\n  const [initialValue, setinitialValue] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5001/api').then(res => res.json()).then(data => {\n      setinitialValue(data);\n      console.log(data);\n    });\n  }, []);\n  function reduce(state, action) {\n    switch (action.type) {\n      case ACTIONS.LIKE:\n        return state.map(data => {\n          if (data.id === action.payload.id) {\n            return {\n              ...data,\n              liked: !data.liked\n            };\n          } else {\n            return data;\n          }\n        });\n      case ACTIONS.SAVE:\n        return state.map(data => {\n          if (data.id === action.payload.id) {\n            console.log('saved');\n            return {\n              ...data,\n              saved: !data.saved\n            };\n          }\n          return data;\n        });\n    }\n  }\n  const [state, dispatch] = useReducer(reduce, initialValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !initialValue ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this) : state.map(data => {\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(Feed, {\n        fullData: {\n          ...data\n        },\n        refer: data.id,\n        dispatch: dispatch\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fwrIIuL+FwtWkqGg2gzB8kRCCO4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","Feed","jsxDEV","_jsxDEV","ACTIONS","SAVE","LIKE","Home","_s","initialValue","setinitialValue","fetch","then","res","json","data","console","log","reduce","state","action","type","map","id","payload","liked","saved","dispatch","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","fullData","refer","_c","$RefreshReg$"],"sources":["/Users/ashwin/Documents/projects/insta-cloneV2/client/src/components/home/Home.js"],"sourcesContent":["import React, { useEffect, useState, useReducer } from 'react'\nimport './home.css'\nimport Feed from './Feed'\n\nexport const ACTIONS = {\n  SAVE: 'save',\n  LIKE: 'like',\n\n}\n\nconst Home = () => {\n\n\n  const [initialValue, setinitialValue] = useState([]);\n  useEffect(()=>{\n    fetch('http://localhost:5001/api')\n    .then(res => res.json())\n    .then(data => {setinitialValue(data); console.log(data);})\n  }, [])\n\n  function reduce(state, action){\n    switch (action.type){\n      case ACTIONS.LIKE :\n\n        return (state.map(data=>{\n          if(data.id === action.payload.id){\n            return {...data, liked: !data.liked}\n          }else{\n            return data;\n          }\n        })\n      )\n      case ACTIONS.SAVE:\n        return (state.map(data=>{\n          if(data.id===action.payload.id){\n            console.log('saved');\n            return {...data, saved: !data.saved}\n          }\n          return data;\n        }))\n    }\n\n  }\n  const [state, dispatch] = useReducer(reduce, initialValue)\n  \n  return (\n    <div className='container'>\n      {!initialValue? \n      <div style={{color: 'white'}}>\n        {\"Loading\"}\n        </div>: state.map(data=>{\n        console.log(data);\n        return  <Feed fullData={{...data}} key={data.id} refer={data.id} dispatch={dispatch} />\n      })\n      }\n    </div>\n  )\n}\n\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,OAAO,GAAG;EACrBC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;AAER,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpDD,SAAS,CAAC,MAAI;IACZa,KAAK,CAAC,2BAA2B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MAACL,eAAe,CAACK,IAAI,CAAC;MAAEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAAC,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,MAAMA,CAACC,KAAK,EAAEC,MAAM,EAAC;IAC5B,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAKjB,OAAO,CAACE,IAAI;QAEf,OAAQa,KAAK,CAACG,GAAG,CAACP,IAAI,IAAE;UACtB,IAAGA,IAAI,CAACQ,EAAE,KAAKH,MAAM,CAACI,OAAO,CAACD,EAAE,EAAC;YAC/B,OAAO;cAAC,GAAGR,IAAI;cAAEU,KAAK,EAAE,CAACV,IAAI,CAACU;YAAK,CAAC;UACtC,CAAC,MAAI;YACH,OAAOV,IAAI;UACb;QACF,CAAC,CAAC;MAEJ,KAAKX,OAAO,CAACC,IAAI;QACf,OAAQc,KAAK,CAACG,GAAG,CAACP,IAAI,IAAE;UACtB,IAAGA,IAAI,CAACQ,EAAE,KAAGH,MAAM,CAACI,OAAO,CAACD,EAAE,EAAC;YAC7BP,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;YACpB,OAAO;cAAC,GAAGF,IAAI;cAAEW,KAAK,EAAE,CAACX,IAAI,CAACW;YAAK,CAAC;UACtC;UACA,OAAOX,IAAI;QACb,CAAC,CAAC;IACN;EAEF;EACA,MAAM,CAACI,KAAK,EAAEQ,QAAQ,CAAC,GAAG3B,UAAU,CAACkB,MAAM,EAAET,YAAY,CAAC;EAE1D,oBACEN,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvB,CAACpB,YAAY,gBACdN,OAAA;MAAK2B,KAAK,EAAE;QAACC,KAAK,EAAE;MAAO,CAAE;MAAAF,QAAA,EAC1B;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,GAAEhB,KAAK,CAACG,GAAG,CAACP,IAAI,IAAE;MACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,oBAAQZ,OAAA,CAACF,IAAI;QAACmC,QAAQ,EAAE;UAAC,GAAGrB;QAAI,CAAE;QAAesB,KAAK,EAAEtB,IAAI,CAACQ,EAAG;QAACI,QAAQ,EAAEA;MAAS,GAA5CZ,IAAI,CAACQ,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAAC;IACzF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAAA3B,EAAA,CA/CKD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAiDV,eAAeA,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}